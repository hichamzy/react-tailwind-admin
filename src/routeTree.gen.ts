/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedDashboardTableauIndexImport } from './routes/_authenticated/dashboard/tableau/index'
import { Route as AuthenticatedDashboardSondagesIndexImport } from './routes/_authenticated/dashboard/sondages/index'
import { Route as AuthenticatedDashboardNotesIndexImport } from './routes/_authenticated/dashboard/notes/index'
import { Route as AuthenticatedDashboardCoursIndexImport } from './routes/_authenticated/dashboard/cours/index'
import { Route as AuthenticatedDashboardClassesIndexImport } from './routes/_authenticated/dashboard/classes/index'
import { Route as AuthenticatedDashboardAbsencesIndexImport } from './routes/_authenticated/dashboard/absences/index'

// Create Virtual Routes

const GuestAuthRegisterLazyImport = createFileRoute('/_guest/auth/register')()
const GuestAuthLoginLazyImport = createFileRoute('/_guest/auth/login')()

// Create/Update Routes

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const GuestAuthRegisterLazyRoute = GuestAuthRegisterLazyImport.update({
  path: '/auth/register',
  getParentRoute: () => GuestRoute,
} as any).lazy(() =>
  import('./routes/_guest/auth/register.lazy').then((d) => d.Route),
)

const GuestAuthLoginLazyRoute = GuestAuthLoginLazyImport.update({
  path: '/auth/login',
  getParentRoute: () => GuestRoute,
} as any).lazy(() =>
  import('./routes/_guest/auth/login.lazy').then((d) => d.Route),
)

const AuthenticatedDashboardTableauIndexRoute =
  AuthenticatedDashboardTableauIndexImport.update({
    path: '/dashboard/tableau/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardSondagesIndexRoute =
  AuthenticatedDashboardSondagesIndexImport.update({
    path: '/dashboard/sondages/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardNotesIndexRoute =
  AuthenticatedDashboardNotesIndexImport.update({
    path: '/dashboard/notes/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardCoursIndexRoute =
  AuthenticatedDashboardCoursIndexImport.update({
    path: '/dashboard/cours/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardClassesIndexRoute =
  AuthenticatedDashboardClassesIndexImport.update({
    path: '/dashboard/classes/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardAbsencesIndexRoute =
  AuthenticatedDashboardAbsencesIndexImport.update({
    path: '/dashboard/absences/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/_guest/auth/login': {
      id: '/_guest/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof GuestAuthLoginLazyImport
      parentRoute: typeof GuestImport
    }
    '/_guest/auth/register': {
      id: '/_guest/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof GuestAuthRegisterLazyImport
      parentRoute: typeof GuestImport
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/absences/': {
      id: '/_authenticated/dashboard/absences/'
      path: '/dashboard/absences'
      fullPath: '/dashboard/absences'
      preLoaderRoute: typeof AuthenticatedDashboardAbsencesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/classes/': {
      id: '/_authenticated/dashboard/classes/'
      path: '/dashboard/classes'
      fullPath: '/dashboard/classes'
      preLoaderRoute: typeof AuthenticatedDashboardClassesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/cours/': {
      id: '/_authenticated/dashboard/cours/'
      path: '/dashboard/cours'
      fullPath: '/dashboard/cours'
      preLoaderRoute: typeof AuthenticatedDashboardCoursIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/notes/': {
      id: '/_authenticated/dashboard/notes/'
      path: '/dashboard/notes'
      fullPath: '/dashboard/notes'
      preLoaderRoute: typeof AuthenticatedDashboardNotesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/sondages/': {
      id: '/_authenticated/dashboard/sondages/'
      path: '/dashboard/sondages'
      fullPath: '/dashboard/sondages'
      preLoaderRoute: typeof AuthenticatedDashboardSondagesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/tableau/': {
      id: '/_authenticated/dashboard/tableau/'
      path: '/dashboard/tableau'
      fullPath: '/dashboard/tableau'
      preLoaderRoute: typeof AuthenticatedDashboardTableauIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedDashboardIndexRoute,
    AuthenticatedDashboardAbsencesIndexRoute,
    AuthenticatedDashboardClassesIndexRoute,
    AuthenticatedDashboardCoursIndexRoute,
    AuthenticatedDashboardNotesIndexRoute,
    AuthenticatedDashboardSondagesIndexRoute,
    AuthenticatedDashboardTableauIndexRoute,
  }),
  GuestRoute: GuestRoute.addChildren({
    GuestAuthLoginLazyRoute,
    GuestAuthRegisterLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_guest"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.ts",
      "children": [
        "/_authenticated/dashboard/",
        "/_authenticated/dashboard/absences/",
        "/_authenticated/dashboard/classes/",
        "/_authenticated/dashboard/cours/",
        "/_authenticated/dashboard/notes/",
        "/_authenticated/dashboard/sondages/",
        "/_authenticated/dashboard/tableau/"
      ]
    },
    "/_guest": {
      "filePath": "_guest.ts",
      "children": [
        "/_guest/auth/login",
        "/_guest/auth/register"
      ]
    },
    "/_guest/auth/login": {
      "filePath": "_guest/auth/login.lazy.tsx",
      "parent": "/_guest"
    },
    "/_guest/auth/register": {
      "filePath": "_guest/auth/register.lazy.tsx",
      "parent": "/_guest"
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/absences/": {
      "filePath": "_authenticated/dashboard/absences/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/classes/": {
      "filePath": "_authenticated/dashboard/classes/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/cours/": {
      "filePath": "_authenticated/dashboard/cours/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/notes/": {
      "filePath": "_authenticated/dashboard/notes/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/sondages/": {
      "filePath": "_authenticated/dashboard/sondages/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/tableau/": {
      "filePath": "_authenticated/dashboard/tableau/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
